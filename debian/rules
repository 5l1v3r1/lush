#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

# To fetch upstream CVS snapshot -- relative path to it
# from the root of packaging project
CVS_ROOT_PATH=branches/upstream/cvs/lush
CVS_TIMESTAMP=$(shell date +"20%y%m%d")
include /usr/share/dpatch/dpatch.make

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

config.status: patch-stamp configure
	dh_testdir

	# Configuring package
	F77=gfortran ./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=$$\{prefix}/share/man  CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"

# grr - those lines were added by dh_make originally -- I need to clarify
autotools:
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif

cvs-snapshot:
	#cd ../$(CVS_ROOT_PATH) && cvs update
	cd .. && \
	 diff -x config.sub -x config.guess -x .svn -x CVS -x debian -Naur trunk $(CVS_ROOT_PATH) | \
	 dpatch patch-template -p "cvs$(CVS_TIMESTAMP)" "Dated CVS snapshot" >| trunk/debian/patches/cvs$(CVS_TIMESTAMP).dpatch && \
	 { echo "cvs$(CVS_TIMESTAMP)"; grep -v '^cvs[0-9]*' trunk/debian/patches/00list; } >| patches.new && \
	 mv patches.new trunk/debian/patches/00list

build: build-stamp
build-stamp: config.status
	dh_testdir

	# Building package
	$(MAKE) all

	touch build-stamp

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Cleaning package
	[ ! -f Makefile ] || $(MAKE) distclean
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Installing package
	$(MAKE) install prefix=$(CURDIR)/debian/lush/usr
	install -D -m 0644 doc/README debian/lush/usr/share/doc/lush/README.doc

	# Moving files
	mv debian/lush/usr/share/lush             debian/lush-library/usr/share
	mv debian/lush-library/usr/share/lush/etc debian/lush/usr/share/lush

	# Fixing permissions
	chmod 0644 debian/lush/usr/share/lush/lush.el
	chmod 0644 debian/lush/usr/share/lush/lush.1
	chmod 0644 debian/lush/usr/share/lush/README.ivtools

	find debian/lush-library/usr/share/lush -type f -exec chmod 0644 {} \;
	find debian/lush-library/usr/share/lush -name "*.py" -exec chmod 0755 {} \;
	find debian/lush-library/usr/share/lush -name "demo*" -exec chmod 0755 {} \;
	chmod 0755 debian/lush-library/usr/share/lush/packages/sn28/examples/tsp/tsp
	chmod 0755 debian/lush-library/usr/share/lush/demos/*
	chmod 0644 debian/lush-library/usr/share/lush/demos/README
	chmod 0644 debian/lush-library/usr/share/lush/demos/*.lsh

	# Moving emacs script to proper location
	mv debian/lush/usr/share/lush/lush.el     debian/lush-library/usr/share/emacs/site-lisp/lush/

	# Removing double files
	rm -f debian/lush-library/usr/share/lush/src/lush
	rm -f `find debian/lush-library/usr/share/lush/src -name "*.o"`

	# Installing lintian overrides
	for LINTIAN in debian/lintian/*; \
	do \
		install -D -m 0644 $$LINTIAN debian/`basename $$LINTIAN`/usr/share/lintian/overrides/`basename $$LINTIAN` || exit 1; \
	done

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
# keep debconf - might be necessary for emacsen
#	dh_installdebconf
	dh_installemacsen
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture independant packages using the common target.
binary-indep: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary-common binary install
